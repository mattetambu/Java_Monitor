package Monitor;public class Queue {	private class elem {		private long info;		private elem next;	}	private elem head = null;	private elem tail = null;		public Queue () {	}		public boolean empty () {		return (head == null);	}		public long first () {		return (!empty())? head.info: -1;	}		public boolean contains (long ID) {		elem p = head;		while (p != null && p.info != ID) p = p.next;		return (p != null && p.info == ID);	}		public void insert (long ID) {		elem p = new elem();		p.info = ID;		p.next = null;				if (empty()) head = tail = p;		else tail = tail.next = p;	}		public long extract () {		long ID = -1;		if (!empty()) {			ID = head.info;			head = head.next;			if (head == null) tail = null;		}		return ID;	}}
